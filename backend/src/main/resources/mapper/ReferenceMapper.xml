<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="upc.backend.mapper.ReferenceMapper">
    <resultMap id="BaseResultMap" type="upc.backend.entity.Reference">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="title" jdbcType="VARCHAR" property="title" />
        <result column="author" jdbcType="VARCHAR" property="author" />
        <result column="publish_year" jdbcType="INTEGER" property="publish_year" />
        <result column="publisher" jdbcType="VARCHAR" property="publisher" />
        <result column="cite_str" jdbcType="VARCHAR" property="cite_str" />
        <result column="team" jdbcType="VARCHAR" property="team" />
        <result column="detail" jdbcType="LONGVARCHAR" property="detail" />
        <result column="file_path" jdbcType="VARCHAR" property="file_path" />
        <result column="upload_user" jdbcType="VARCHAR" property="upload_user" />
        <result column="upload_time" jdbcType="TIMESTAMP" property="upload_time" />
        <result column="view_num" jdbcType="INTEGER" property="view_num" />
        <result column="download_num" jdbcType="INTEGER" property="download_num" />
    </resultMap>
    <sql id="Base_Column_List">
        id, title, author, publish_year, publisher, cite_str, team, detail, file_path, upload_user, upload_time, view_num, download_num
    </sql>

    <select id="selectByID" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from references_data
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectByTitle" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from references_data
        where title = #{title,jdbcType=VARCHAR}
    </select>

    <select id="selectByAuthor" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from references_data
        where author = #{author,jdbcType=VARCHAR}
    </select>

    <select id="getNumOfTotalReferences" parameterType="Map" resultType="int">
        select count(*) from references_data
    </select>
    <select id="findAllReferenceList" parameterType="Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from references_data
        <if test="start!=null and limit!=null">
            limit #{start},#{limit}
        </if>
    </select>

    <insert id="insert" parameterType="upc.backend.entity.Reference">
        insert into references_data (id, title, author, publish_year, publisher, cite_str, team, detail, file_path, upload_user, upload_time, view_num, download_num)
        values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, #{publish_year,jdbcType=INTEGER}, #{publisher,jdbcType=VARCHAR}, #{cite_str,jdbcType=VARCHAR},
                #{team,jdbcType=VARCHAR}, #{detail,jdbcType=LONGVARCHAR}, #{file_path,jdbcType=VARCHAR}, #{upload_user,jdbcType=VARCHAR}, #{upload_time,jdbcType=TIMESTAMP}, #{view_num,jdbcType=INTEGER}, #{download_num,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="upc.backend.entity.Reference">
        insert into references_data
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="author != null">
                author,
            </if>
            <if test="publish_year != null">
                publish_year,
            </if>
            <if test="publisher != null">
                publisher,
            </if>
            <if test="cite_str != null">
                cite_str,
            </if>
            <if test="team != null">
                team,
            </if>
            <if test="detail != null">
                detail,
            </if>
            <if test="file_path != null">
                file_path,
            </if>
            <if test="upload_user!= null">
                upload_user,
            </if>
            <if test="upload_time != null">
                upload_time,
            </if>
            <if test="view_num != null">
                view_num,
            </if>
            <if test="download_num != null">
                download_num,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id, jdbcType=INTEGER},
            </if>
            <if test="title != null">
                #{title, jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                #{author, jdbcType=VARCHAR},
            </if>
            <if test="publish_year != null">
                #{publish_year, jdbcType=INTEGER},
            </if>
            <if test="publisher != null">
                #{publisher, jdbcType=VARCHAR},
            </if>
            <if test="cite_str != null">
                #{cite_str,jdbcType=VARCHAR},
            </if>
            <if test="team != null">
                #{team,jdbcType=VARCHAR},
            </if>
            <if test="detail != null">
                #{detail,jdbcType=LONGVARCHAR},
            </if>
            <if test="file_path != null">
                #{file_path,jdbcType=VARCHAR},
            </if>
            <if test="upload_user != null">
                #{upload_user,jdbcType=VARCHAR},
            </if>
            <if test="upload_time != null">
                #{upload_time,jdbcType=TIMESTAMP},
            </if>
            <if test="view_num != null">
                #{view_num,jdbcType=INTEGER},
            </if>
            <if test="download_num != null">
                #{download_num,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="upc.backend.entity.Reference">
        update references_data
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                author = #{author,jdbcType=VARCHAR},
            </if>
            <if test="publish_year != null">
                publish_year = #{publish_year,jdbcType=INTEGER},
            </if>
            <if test="publisher != null">
                publisher = #{publisher,jdbcType=VARCHAR},
            </if>
            <if test="cite_str != null">
                cite_str = #{cite_str,jdbcType=VARCHAR},
            </if>
            <if test="team != null">
                team = #{team,jdbcType=VARCHAR},
            </if>
            <if test="detail != null">
                detail = #{detail,jdbcType=LONGVARCHAR},
            </if>
            <if test="file_path != null">
                file_path = #{file_path,jdbcType=VARCHAR},
            </if>
            <if test="upload_user != null">
                upload_user = #{upload_user,jdbcType=VARCHAR},
            </if>
            <if test="upload_time != null">
                upload_time = #{upload_time,jdbcType=TIMESTAMP},
            </if>
            <if test="view_num != null">
                view_num = #{view_num,jdbcType=INTEGER},
            </if>
            <if test="download_num != null">
                download_num = #{download_num,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="upc.backend.entity.Reference">
        update references_data
        set title = #{title,jdbcType=VARCHAR},
            author = #{author,jdbcType=VARCHAR},
            publish_year = #{nickname,jdbcType=INTEGER},
            publisher = #{publisher,jdbcType=VARCHAR},
            cite_str = #{cite_str,jdbcType=VARCHAR},
            team = #{team,jdbcType=VARCHAR},
            detail= #{detail,jdbcType=LONGVARCHAR},
            upload_user = #{upload_user,jdbcType=VARCHAR},
            upload_time = #{upload_time,jdbcType=TIMESTAMP},
            view_num = #{view_num,jdbcType=INTEGER},
            download_num = #{download_num,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <delete id="deleteBatch" parameterType="java.lang.Integer">
        delete from references_data
        where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>